const axios = require('axios');
const FtpRepoService = require('../services/FtpRepoService'); // Ajuste o caminho para o arquivo da classe FtpRepoService

module.exports = {
  /**
   * Processes the request for the Runway Gen3 Alpha Turbo API.
   * @param {string} prompt - Placeholder for the main text prompt.
   * @param {string} model - Placeholder for compatibility with the API's `model`.
   * @param {Object} modelParameters - Parameters required for the request.
   * @returns {Promise<Object>} - Response formatted with the `responseKey`.
   */
  async process(prompt, model, modelParameters = {}) {
    
    modelParameters = modelParameters || {};
    
    const responseKey = modelParameters.responseKey || 'runwayGen3Result';

    try {
      // Fetch the API Key from parameters or environment variables
      const apiKey = modelParameters.api_key || process.env.RUNWAY_API_KEY;
      if (!apiKey) {
        throw new Error('API key is required and must be provided as a parameter or environment variable RUNWAY_API_KEY.');
      }

      // Define the API endpoint
      const endpoint = 'https://api.segmind.com/v1/runway-gen3-alphaturbo';

      // Build the payload
      const payload = {
        promptText: modelParameters.promptText || prompt,
        promptImage: modelParameters.promptImage || '',
        seed: modelParameters.seed || null,
        ratio: modelParameters.ratio || '16:9',
        duration: modelParameters.duration || 5,
      };

      // Define headers
      const headers = {
        'x-api-key': apiKey,
        'Content-Type': 'application/json',
      };

      console.log('Sending request to Runway Gen3 Alpha Turbo API...');
      console.log('Payload:', JSON.stringify(payload, null, 2));

      // Make the API request
      const response = await axios.post(endpoint, payload, { headers });

      // Verify and process the response
      if (response.status === 200 && response.data && response.data.output) {
        console.log('Request successful. Uploading output to ImageRepo...');

         const config = {ftpHost:'ftp.travelzviagensturismo.com',ftpPort:21,ftpUser:'pddidg3z',ftpPassword:'q9VB0fdr28',baseDomain:'https://travelzviagensturismo.com',rootDir:'/public_html/'};
        // Instancia o servi√ßo de FTP
        const ftpRepoService = new FtpRepoService(config);

        // Save the output in the ImageRepo
        const savedOutput = await ftpRepoService.createImage(
          response.data.output, // Base64 content or link
          {
            description: 'Output generated by Runway Gen3 Alpha Turbo API',
            tags: ['runway-gen3', 'AI', 'video', 'AlphaTurbo'],
            targetFolder:'videorepo'
          }, // Metadata
          '.mp4', // File extension
          null, // ImageRepo API Key
          null, // FTP configuration
          false // Content is not Base64 but a URL
        );

        // Return the formatted response
        return {
          [responseKey]: {
            success: true,
            data: savedOutput,
          },
        };
      } else {
        throw new Error('The Runway Gen3 Alpha Turbo API did not return a valid output.');
      }
    } catch (error) {
      console.error('Error in Runway Gen3 Alpha Turbo API integration:', error);

      // Return error response with the responseKey
      return {
        [responseKey]: {
          success: false,
          error: error.message,
          details: error.response?.data || null,
        },
      };
    }
  },
};
